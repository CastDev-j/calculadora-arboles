---
import type { SiteMeta } from '@/types'

import BaseHead from '@/components/BaseHead.astro'
import Footer from '@/components/layout/Footer.astro'
import Header from '@/components/layout/Header.astro'
import ThemeProvider from '@/components/ThemeProvider.astro'

import { siteConfig } from '@/site-config'
import { ViewTransitions } from 'astro:transitions'

interface Props {
	meta: SiteMeta
}

const {
	meta: { articleDate, description = siteConfig.description, ogImage, title }
} = Astro.props
---

<html lang={siteConfig.lang} class=''>
	<head>
		<ViewTransitions />
		<script>
			document.addEventListener('astro:page-load', () => {
				if (typeof window !== 'undefined') {
					const storedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null

					// Aplicar el tema guardado en el DOM antes de renderizar
					if (storedTheme) {
						document.documentElement.classList.add(storedTheme) // Agregar el tema al DOM
						setTheme(storedTheme) // Establecer el estado
					} else {
						document.documentElement.classList.add('light') // Establecer modo claro por defecto
						setTheme('light')
					}
				}

				function setTheme(theme: 'light' | 'dark') {
					if (theme === 'dark') {
						document.documentElement.classList.add('dark')
					} else {
						document.documentElement.classList.remove('dark')
					}
				}
			})
		</script>
		<BaseHead articleDate={articleDate} description={description} ogImage={ogImage} title={title} />
	</head>

	<body class='flex justify-center bg-background'>
		<ThemeProvider />
		<main
			class='flex min-h-screen w-screen max-w-[60rem] flex-col items-center px-6 pb-10 pt-7 font-satoshi text-[0.92rem] leading-relaxed sm:px-10 lg:px-10'
		>
			<Header />
			<slot />
			<Footer />
		</main>
	</body>
</html>
